/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PE;

import java.rmi.Naming;
import javax.swing.JOptionPane;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Razer Blade
 */
public class ManagerClient extends javax.swing.JFrame {

    String serviceName = "rmi://localhost:1098/BookService";
    BookMngInterface stub = null;
    Vector header = new Vector();
    Vector data = null;
    boolean addNew = false, change = false;

    /**
     * Creates new form ManagerClient
     */
    public ManagerClient() {
        initComponents();
        header.add("Code");
        header.add("Author");
        header.add("Price");
        header.add("Year of Release");
        header.add("Publisher");
        turnOff();
        try {
            stub = (BookMngInterface) Naming.lookup(serviceName);
            data = stub.getInitialData();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        DefaultTableModel m = (DefaultTableModel) (tblBook.getModel());
        m.setDataVector(data, header);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblBook = new javax.swing.JTable();
        btnNew = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtYoR = new javax.swing.JTextField();
        txtPublisher = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBookMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBook);

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Book Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 19), new java.awt.Color(102, 153, 255))); // NOI18N

        jLabel1.setText("Code(B***) :");

        jLabel2.setText("Author :");

        jLabel3.setText("Price($) :");

        jLabel4.setText("Year of Release :");

        jLabel5.setText("Publisher :");

        btnAdd.setText("Add to List");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAuthor)
                            .addComponent(txtCode)
                            .addComponent(txtPrice)
                            .addComponent(txtYoR)
                            .addComponent(txtPublisher, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtYoR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNew)
                            .addComponent(btnDel)
                            .addComponent(btnSave))
                        .addGap(0, 24, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        addNew = true;
        btnUpdate.setEnabled(false);
        btnAdd.setEnabled(true);
        txtCode.setText("");
        txtCode.requestFocus();
        txtAuthor.setText("");
        txtPrice.setText("");
        txtYoR.setText("");
        txtPublisher.setText("");
        turnOn();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        int pos = tblBook.getSelectedRow();
        int r = JOptionPane.showConfirmDialog(null, "Wanna remove this book?", "Confirm remove", JOptionPane.YES_NO_OPTION);
        if (r == JOptionPane.YES_OPTION) {
            change = true;
            data.remove(pos);
            txtCode.setText("");
            txtAuthor.setText("");
            txtPrice.setText("");
            txtYoR.setText("");
            txtPublisher.setText("");
            turnOff();
            tblBook.updateUI();
        } else {
            JOptionPane.showMessageDialog(this, "Remove cancled.");
        }
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            if (!change) {
                return;
            }
            if (stub.saveList(data) == true) {
                JOptionPane.showMessageDialog(this, "Saved.");
            } else {
                JOptionPane.showMessageDialog(this, "Sorry. Data can not be saved.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        change = false;
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String code = txtCode.getText().toUpperCase();

        try {
            int exist = stub.isExisted(code, data);
            if (exist == 0) {
                JOptionPane.showMessageDialog(this, "Code existed on CLIENT.");
                txtCode.setText("");
                txtCode.requestFocus();
                return;
            }
            if (exist == 1) {
                JOptionPane.showMessageDialog(this, "Code existed on SERVER.");
                txtCode.setText("");
                txtCode.requestFocus();
                return;
            }
        } catch (Exception e) {
        }
        if (!code.matches("^B\\d{3}$")) {
            JOptionPane.showMessageDialog(this, "Invalid code.(B*** - * is a number)");
            txtCode.setText("");
            txtCode.requestFocus();
            return;
        }
        String author = txtAuthor.getText();
        if (author.equals("")) {
            JOptionPane.showMessageDialog(this, "Author must be filled.");
            txtYoR.requestFocus();
            return;
        }
        String price = txtPrice.getText();
        if (!price.matches("[0-9]{1,}")) {
            JOptionPane.showMessageDialog(this, "Price must be a positive integer.");
            txtPrice.setText("");
            txtPrice.requestFocus();
            return;
        }
        String YoR = txtYoR.getText();
        if (!YoR.matches("[0-9]{4}")) {
            JOptionPane.showMessageDialog(this, "Year of Release must be a number with 4 character(Ex: 0001, 2000, ...).");
            txtYoR.setText("");
            txtYoR.requestFocus();
            return;
        }
        int intYoR = Integer.parseInt(YoR);
        if (intYoR < 0 || intYoR > 2016) {
            JOptionPane.showMessageDialog(this, "Year of Release must be >=0000 and <=2016.");
            txtYoR.setText("");
            txtYoR.requestFocus();
            return;
        }
        String publisher = txtPublisher.getText().toUpperCase();
        if (publisher.equals("")) {
            JOptionPane.showMessageDialog(this, "Publisher must be filled.");
            txtPublisher.requestFocus();
            return;
        }
        int intPrice = Integer.parseInt(price);
        Vector v = new Vector();
        v.add(code);
        v.add(author.toUpperCase());
        v.add(intPrice);
        v.add(intYoR);
        v.add(publisher);

        data.add(v);
        btnNewActionPerformed(evt);
        tblBook.updateUI();
        addNew = false;
        turnOff();
        change = true;
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBookMouseClicked
        int row = tblBook.getSelectedRow();
        txtCode.setText(tblBook.getValueAt(row, 0).toString());        
        txtAuthor.setText(tblBook.getValueAt(row, 1).toString());
        txtPrice.setText(tblBook.getValueAt(row, 2).toString());
        txtYoR.setText(tblBook.getValueAt(row, 3).toString());
        txtPublisher.setText(tblBook.getValueAt(row, 4).toString());
        turnOn();
        txtCode.setEditable(false);
        btnAdd.setEnabled(false);
        btnUpdate.setEnabled(true);
    }//GEN-LAST:event_tblBookMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String author = txtAuthor.getText();
        if (author.equals("")) {
            JOptionPane.showMessageDialog(this, "Author must be filled.");
            txtYoR.requestFocus();
            return;
        }
        String price = txtPrice.getText();
        if (!price.matches("[0-9]{2,}")) {
            JOptionPane.showMessageDialog(this, "Price must be a positive integer.");
            txtPrice.setText("");
            txtPrice.requestFocus();
            return;
        }
        String YoR = txtYoR.getText();
        if (!YoR.matches("[0-9]{4}")) {
            JOptionPane.showMessageDialog(this, "Year of Release must be a number with 4 character(Ex: 0001, 2000, ...).");
            txtYoR.setText("");
            txtYoR.requestFocus();
            return;
        }
        int intYoR = Integer.parseInt(YoR);
        if (intYoR < 0 || intYoR > 2016) {
            JOptionPane.showMessageDialog(this, "Year of Release must be >=0000 and <=2016.");
            txtYoR.setText("");
            txtYoR.requestFocus();
            return;
        }
        String publisher = txtPublisher.getText().toUpperCase();
        if (publisher.equals("")) {
            JOptionPane.showMessageDialog(this, "Publisher must be filled.");
            txtPublisher.requestFocus();
            return;
        }
        int intPrice = Integer.parseInt(price);
        Vector uv = (Vector) data.get(tblBook.getSelectedRow());
        uv.set(1, author.toUpperCase());
        uv.set(2, intPrice);
        uv.set(3, intYoR);
        uv.set(4, publisher);
        tblBook.updateUI();
        change = true;
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void turnOff() {
        txtCode.setEditable(false);
        btnAdd.setEnabled(false);
        btnUpdate.setEnabled(false);
    }

    private void turnOn() {
        txtCode.setEditable(true);
        txtAuthor.setEditable(true);
        txtYoR.setEditable(true);
        txtPrice.setEditable(true);
        txtPublisher.setEditable(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBook;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtPublisher;
    private javax.swing.JTextField txtYoR;
    // End of variables declaration//GEN-END:variables
}
